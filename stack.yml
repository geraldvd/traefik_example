version: "3.7"

services:
  reverse-proxy:
    # The official v2 Traefik docker image
    image: traefik:v2.4
    ports:
      # Listen on port 80, default for HTTP, necessary to redirect to HTTPS
      - 80:80
    networks:
      # Use the public network created to be shared between Traefik and
      # any other service that needs to be publicly available with HTTPS
      - traefik-public
    volumes:
      # Add Docker as a mounted volume, so that Traefik can read the labels of other services
      - /var/run/docker.sock:/var/run/docker.sock:ro
    command: # Static configurations
      # Enable Docker in Traefik, so that it reads labels from Docker services
      # - --providers.docker
      # Enable Docker Swarm mode
      - --providers.docker.swarmmode=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Create an entrypoint "http" listening on address 80
      - --entrypoints.http.address=:80
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
    deploy:
      replicas: 1
      update_config:
        failure_action: rollback
        order: start-first
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role==manager]

  backend:
    build: ./backend
    image: backend
    command: uvicorn main:app --host 0.0.0.0 --port 80
    networks:
      # Use the public network created to be shared between Traefik and
      # any other service that needs to be publicly available with HTTPS
      - traefik-public
    deploy:
      replicas: 1
      update_config:
        failure_action: rollback
        order: start-first
      restart_policy:
        condition: on-failure
      labels: # Dynamic configurations
        # Enable Traefik for this service, to make it available in the public network
        - traefik.enable=true
        # Define the port inside of the Docker service to use
        - "traefik.http.services.backend.loadbalancer.server.port=80"
        # Make Traefik use this domain in HTTP
        - traefik.http.routers.backend-http.entrypoints=http
        - traefik.http.routers.backend-http.rule=Host(`infundy.com`)
        # Use the traefik-public network (declared below)
        - traefik.docker.network=traefik-public

networks:
  # Use the previously created public network "traefik-public", shared with other
  # services that need to be publicly available via this Traefik
  traefik-public:
    external: true
